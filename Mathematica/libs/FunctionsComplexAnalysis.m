(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



mf = MatrixForm[#]&;
mfl = Module[{list},list=#1; MatrixForm[#]&/@ list]&;
toge = Together[#]&;
simp = Simplify[#]&;
(*
tp = Transpose[#]&;
expa = Expand[#]&;
*)


(* These are understood as real numbers*)
Clear[a ,b,x, y,r, s, q, p, \[Phi], \[CurlyPhi] , \[Theta] ,  \[CurlyTheta], \[Chi],  \[Psi], \[Zeta], \[Sigma], \[Rho], \[CurlyRho], \[Omega], \[CurlyPi], \[Eta],m,n];
$Assumptions ={a\[Element]Reals, Subscript[a, n_] \[Element]Reals,b\[Element]Reals, Subscript[b, n_] \[Element]Reals,x\[Element]Reals,Subscript[x, n_] \[Element]Reals, y\[Element]Reals, Subscript[y, n_] \[Element]Reals,
\!\(\*OverscriptBox[\(x\), \(^\)]\)\[Element]Reals,Subscript[
\!\(\*OverscriptBox[\(x\), \(^\)]\), n_] \[Element]Reals, 
\!\(\*OverscriptBox[\(y\), \(^\)]\)\[Element]Reals, Subscript[
\!\(\*OverscriptBox[\(y\), \(^\)]\), n_] \[Element]Reals,r\[Element]Reals, Subscript[r, n_] \[Element]Reals,s\[Element]Reals, Subscript[s, n_] \[Element]Reals,q\[Element]Reals, Subscript[q, n_] \[Element]Reals,p\[Element]Reals, Subscript[p, n_] \[Element]Reals,\[Phi]\[Element]Reals,Subscript[\[Phi], n_] \[Element]Reals, \[CurlyPhi] \[Element]Reals, Subscript[\[CurlyPhi], n_] \[Element]Reals,\[Theta] \[Element]Reals,  Subscript[\[Theta], n_] \[Element]Reals,\[CurlyTheta]\[Element]Reals, Subscript[\[CurlyTheta], n_] \[Element]Reals,\[Chi]\[Element]Reals,  Subscript[\[Chi], n_] \[Element]Reals,\[Psi]\[Element]Reals, Subscript[\[Psi], n_] \[Element]Reals,\[Zeta]\[Element]Reals, Subscript[\[Zeta], n_] \[Element]Reals,\[Rho]\[Element]Reals, Subscript[\[Rho], n_] \[Element]Reals,\[CurlyRho]\[Element]Reals, Subscript[\[CurlyRho], n_] \[Element]Reals,\[Eta]\[Element]Reals ,Subscript[\[Eta], n_] \[Element]Reals,m\[Element]Reals,n\[Element]Reals,k\[Element]Reals,l\[Element]Reals,t\[Element]Reals,f\[Element]Reals,T\[Element]Reals};
(* \[Sigma]\[Element]Reals, Subscript[\[Sigma], n_] \[Element]Reals, \[Omega]\[Element]Reals, Subscript[\[Omega], n_] \[Element]Reals,\[CurlyPi]\[Element]Reals,Subscript[\[CurlyPi], n_] \[Element]Reals *)



(* Complex conjugations *)
(*Note that the special character \[Conjugate] exists in mathematica, which denotes conjugation:*)
Conjugate[z\[Conjugate]];
(* However, this character leads to awkward treaemant of conjugations. It is impossible to get output in the form, where Conjugate[z] is replaced by z\[Conjugate]. Thus a set of self-made operations seems better.*)

ComplexNumberRules = {\!\(
\*SubsuperscriptBox[\(h\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(h\), \(n\)]\),Subscript[h, n_]->
\!\(\*SubsuperscriptBox[\(h\), \(n\), \(*\)]\), Subscript[
\!\(\*OverscriptBox[\(h\), \(^\)]\), n_]->
\!\(\*SubsuperscriptBox[
OverscriptBox[\(h\), \(^\)], \(n\), \(*\)]\),\!\(
\*SubsuperscriptBox[
OverscriptBox[\(h\), \(^\)], \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[
OverscriptBox[\(h\), \(^\)], \(n\)]\),\!\(
\*SubsuperscriptBox[\(g\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(g\), \(n\)]\),Subscript[g, n_]->
\!\(\*SubsuperscriptBox[\(g\), \(n\), \(*\)]\), Subscript[
\!\(\*OverscriptBox[\(g\), \(^\)]\), n_]->
\!\(\*SubsuperscriptBox[
OverscriptBox[\(g\), \(^\)], \(n\), \(*\)]\),\!\(
\*SubsuperscriptBox[
OverscriptBox[\(g\), \(^\)], \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[
OverscriptBox[\(g\), \(^\)], \(n\)]\),\!\(
\*SubsuperscriptBox[\(n\), \(p_\), \(*\)]\  -> \ 
\*SubscriptBox[\(n\), \(p\)]\),Subscript[n, p_]->
\!\(\*SubsuperscriptBox[\(n\), \(p\), \(*\)]\), Subscript[
\!\(\*OverscriptBox[\(n\), \(^\)]\), p_]->
\!\(\*SubsuperscriptBox[
OverscriptBox[\(n\), \(^\)], \(p\), \(*\)]\),\!\(
\*SubsuperscriptBox[
OverscriptBox[\(n\), \(^\)], \(p_\), \(*\)]\  -> \ 
\*SubscriptBox[
OverscriptBox[\(n\), \(^\)], \(p\)]\),\!\(
\*SubsuperscriptBox[\(z\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(z\), \(n\)]\), Subscript[z, n_]->
\!\(\*SubsuperscriptBox[\(z\), \(n\), \(*\)]\),SuperStar[z] -> z, z->SuperStar[z],\!\(
\*SubsuperscriptBox[\(w\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(w\), \(n\)]\), Subscript[w, n_]->
\!\(\*SubsuperscriptBox[\(w\), \(n\), \(*\)]\),SuperStar[w] -> w, w->SuperStar[w], \!\(
\*SubsuperscriptBox[\(\[Mu]\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(\[Mu]\), \(n\)]\), Subscript[\[Mu], n_]->
\!\(\*SubsuperscriptBox[\(\[Mu]\), \(n\), \(*\)]\),\!\(
\*SubsuperscriptBox[\(\[Nu]\), \(n_\), \(*\)]\  -> \ 
\*SubscriptBox[\(\[Nu]\), \(n\)]\), Subscript[\[Nu], n_]->
\!\(\*SubsuperscriptBox[\(\[Nu]\), \(n\), \(*\)]\), SuperStar[\[Alpha]]->\[Alpha],  \[Alpha]-> SuperStar[\[Alpha]],SuperStar[\[Beta]]->\[Beta], \[Beta]-> SuperStar[\[Beta]],SuperStar[\[Nu]]->\[Nu], \[Nu]->SuperStar[\[Nu]], SuperStar[\[Mu]]->\[Mu], \[Mu]->SuperStar[\[Mu]],SuperStar[\[Kappa]]->\[Kappa], \[Kappa]->SuperStar[\[Kappa]],SuperStar[\[Lambda]]->\[Lambda],\[Lambda]->SuperStar[\[Lambda]]};
conjugaterules = Join[ComplexNumberRules ,{Power[-1,vza_]->Conjugate[Power[-1,vza]]}];
(* note that z_ only refers to latin letters! o.a.h. \[Alpha]_ would refer to any structure! *)

Conj = Module[{xxyyxydf,dfydfyyy},
# /. Complex[xxyyxydf_,dfydfyyy_]->Complex[xxyyxydf,-dfydfyyy] /. conjugaterules]&;

HermConj = If[MatrixQ[#],Conj[Transpose[#]],Conj[#]]&;

ComplexAndRealInfo = (Print["These are real variables:"];
Print[#[[1]] &/@ $Assumptions ];
Print["These are specifically complex variables:"];
Print[#[[2]] &/@ ComplexNumberRules ];
Print["Note that any variable which  is not specifically real, can be expressed with *. Conjugations do not work on these, but destar does. "];)&;

(* Example operation *)
mat = {{Subscript[z, 11],x + y I },{I,1+2I}}; mat //mf
HermConj[mat] //mf

mat = {{Subscript[z, 11],Subscript[z, 12]},{Subscript[z, 21],Subscript[z, 22]}}; mat //mf
HermConj[mat] //mf



(* use this when giving numeric values to starred variables *)
destar = (# //. SuperStar[\[Alpha]_] :> Conjugate[\[Alpha]])&;  (* \[Alpha]_  refers to any structure*)

(* Example operation *)
HermConj[mat] //destar//mf


(* using "Refine" takes the assumptions of real variables above into account *)
restar = (Refine[#] /. Conjugate[\[Alpha]_] :> SuperStar[\[Alpha]])&;

(* Example operation *)
{Conjugate[z],Conjugate[x]} //restar



simpconjus = (restar[((# //destar) //. {Re[klkllkk_]->(klkllkk + Conjugate[klkllkk])/2,
                      Im[klkllkk_]->(klkllkk - Conjugate[klkllkk])/(2 I),
                     Abs[kkkklkklkk_] -> Sqrt[kkkklkklkk Conjugate[kkkklkklkk]],
                     Conjugate[hkjhkjhk_ + kjhkjhkjh_]->Conjugate[hkjhkjhk] + Conjugate[kjhkjhkjh], 
                     Conjugate[hkkhkjhh_ kjjkjhkjj_]->Conjugate[hkkhkjhh] Conjugate[kjjkjhkjj],
Conjugate[Sqrt[ghj_]]->Sqrt[Conjugate[ghj]]}) /. {Conjugate[(-1)^(Subscript[m, kkmm_]+Subscript[m, jjll_])]->(-1)^(Subscript[m, kkmm]+Subscript[m, jjll]),Conjugate[(-1)^Subscript[m, kkkmmm_]]->(-1)^Subscript[m, kkkmmm]}
])&;

(* Example operation *)
SuperStar[(Subscript[z, 1] Subscript[z, 2] Subscript[z, n])] //simpconjus //Simplify
Abs[Subscript[z, n] Sin[Subscript[\[Phi], n]] Cos[\[Theta]]] //simpconjus //Simplify
Re[Subscript[z, n] Sin[Subscript[\[Phi], n]] Cos[\[Theta]]] //simpconjus //Simplify



toxyrules = {Subscript[z, j_]->Subscript[x, j]+I Subscript[y, j],SuperStar[(Subscript[z, j_])]->Subscript[x, j]-I Subscript[y, j],Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_]->Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), j]+I  Subscript[
\!\(\*OverscriptBox[\(y\), \(~\)]\), j],SuperStar[(Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_])]-> Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), j]-I Subscript[
\!\(\*OverscriptBox[\(y\), \(~\)]\), j],z->x+I y,SuperStar[(z)]->x-I y};
toxy = (# //. toxyrules)&;

(* Example operation *)
mat = {{Subscript[z, 11],Subscript[z, 12]},{Subscript[z, 21],Subscript[z, 22]}}; mat //mf
mat = mat //toxy; mat //mf
HermConj[mat] //mf



toxytriagrules = {Subscript[z, j_]->Subscript[x, j]+E^(I Pi/3) Subscript[y, j],SuperStar[(Subscript[z, j_])]->Subscript[x, j]+ E^(-I Pi/3) Subscript[y, j],Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_]->Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), j]+E^(I Pi/3)  Subscript[
\!\(\*OverscriptBox[\(y\), \(~\)]\), j],SuperStar[(Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_])]-> Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), j]+E^(-I Pi/3) Subscript[
\!\(\*OverscriptBox[\(y\), \(~\)]\), j]};
toxytriag = (# //. toxytriagrules)&;

(* Example operation *)
mat = {{Subscript[z, 11],Subscript[z, 12]},{Subscript[z, 21],Subscript[z, 22]}}; mat //mf
mat = mat //toxytriag; mat //mf
HermConj[mat] //mf



tozrules = {Subscript[x, n_]->(Subscript[z, n] + 
\!\(\*SubsuperscriptBox[\(z\), \(n\), \(*\)]\))/2,Subscript[y, n_]->(Subscript[z, n] - 
\!\(\*SubsuperscriptBox[\(z\), \(n\), \(*\)]\))/(2 I)};
toz = (# /. tozrules)&;
(* Example operation *)
mat //toxy //toz//mf
mat //toxy //toz//Simplify//mf


(* does not work nicely with matrix indexes, by definition *)
toxxrules ={Subscript[z, j_]->Subscript[x, 2j-1]+I Subscript[x, 2j],SuperStar[(Subscript[z, j_])]->Subscript[x, 2j-1]-I Subscript[x, 2j],Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_]->Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), 2j-1]+I  Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), 2j],SuperStar[(Subscript[
\!\(\*OverscriptBox[\(z\), \(~\)]\), j_])]-> Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), 2j-1]-I Subscript[
\!\(\*OverscriptBox[\(x\), \(~\)]\), 2j]};
toxx = (# //. toxxrules)&;

(* Example operation *)
{Subscript[z, 1],Subscript[z, 2]} //toxx 


ConjugateEverySecond = (lennu = Length[#]; 
interarg = #;
If[EvenQ[#],simpconjus[Conjugate[interarg[[#]]]],interarg[[#]]] &/@ Table[jlj,{jlj,1,lennu}]
)&;

ConjugateEverySecondColumn = (lennu = Length[#]; 
interarg = Transpose[#];
Transpose[If[EvenQ[#],simpconjus[Conjugate[interarg[[#]]]],interarg[[#]]] &/@ Table[jlj,{jlj,1,lennu}]]
)&;

(* Example operation *)
{Subscript[z, 1],Subscript[z, 2]} //ConjugateEverySecond
mat //ConjugateEverySecondColumn //mf


ComplexAndRealInfo[]


(* 
Integrate[{xxxx,xxxx^2,xxxx^3,xxxx^4,xxxx^5,xxxx^6,xxxx^7,xxxx^8,xxxx^9,xxxx^10,xxxx^11,xxxx^12,xxxx^13,xxxx^14,xxxx^15,xxxx^16,xxxx^17,xxxx^18,xxxx^19,xxxx^20} E^(-Pi xxxx^2), {xxxx, -Infinity,Infinity}] *)


IntegrateRayleighRulesX = Flatten[(#[[1]]->#[[2]] )&/@ Transpose[{{xxxx,xxxx^2,xxxx^3,xxxx^4,xxxx^5,xxxx^6,xxxx^7,xxxx^8,xxxx^9,xxxx^10,xxxx^11,xxxx^12,xxxx^13,xxxx^14,xxxx^15,xxxx^16,xxxx^17,xxxx^18,xxxx^19,xxxx^20},{0,1/(2 \[Pi]),0,3/(4 \[Pi]^2),0,15/(8 \[Pi]^3),0,105/(16 \[Pi]^4),0,945/(32 \[Pi]^5),0,10395/(64 \[Pi]^6),0,135135/(128 \[Pi]^7),0,2027025/(256 \[Pi]^8),0,34459425/(512 \[Pi]^9),0,654729075/(1024 \[Pi]^10)}}]];

IntegrateRayleighRulesY = Flatten[((#[[1]] /. xxxx->yyyy)->#[[2]]) &/@ IntegrateRayleighRulesX];

ComplexGaussianIntegrate = Module[{argument,intthis,reint},
argument = destar[#1];
intthis = Expand[argument /. {#2->xxxx + I yyyy, Conjugate[#2]->xxxx - I yyyy}];
intthis = Collect[intthis,xxxx];
reint = Expand[intthis /. IntegrateRayleighRulesX];
intthis =  Collect[reint,yyyy];
Expand[intthis /. IntegrateRayleighRulesY]
]&;

FullComplexGaussianIntegrate = (
   inta = ComplexGaussianIntegrate[#1,#2[[1]]];
jjj=2;
While[jjj<Length[#2] +1, 
  inta = RayleighIntegrate[inta,#2[[jjj]]];
   jjj = jjj+1];
 inta)&;



